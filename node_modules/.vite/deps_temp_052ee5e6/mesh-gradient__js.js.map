{
  "version": 3,
  "sources": ["../../mesh-gradient.js/lib/core/webgl.js", "../../mesh-gradient.js/lib/core/stripe.gradient.js", "../../mesh-gradient.js/lib/index.js"],
  "sourcesContent": ["\"use strict\";\n/*\n *   Stripe WebGl Gradient Animation\n *   All Credits to Stripe.com\n *   ScrollObserver functionality to disable animation when not scrolled into view has been disabled and\n *   commented out for now.\n *   https://kevinhufnagl.com\n */\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MiniGl = exports.normalizeColor = void 0;\n//Converting colors to proper format\nfunction normalizeColor(hexCode) {\n    return [((hexCode >> 16) & 255) / 255, ((hexCode >> 8) & 255) / 255, (255 & hexCode) / 255];\n}\nexports.normalizeColor = normalizeColor;\n['SCREEN', 'LINEAR_LIGHT'].reduce(function (hexCode, t, n) {\n    var _a;\n    return Object.assign(hexCode, (_a = {},\n        _a[t] = n,\n        _a));\n}, {});\n//Essential functionality of WebGl\n//t = width\n//n = height\nvar MiniGl = /** @class */ (function () {\n    function MiniGl(canvas, width, height, debug) {\n        if (debug === void 0) { debug = false; }\n        var _miniGl = this, debug_output = -1 !== document.location.search.toLowerCase().indexOf('debug=webgl');\n        (_miniGl.canvas = canvas),\n            (_miniGl.gl = _miniGl.canvas.getContext('webgl', {\n                antialias: true,\n                preserveDrawingBuffer: true,\n            })),\n            (_miniGl.meshes = []);\n        var context = _miniGl.gl;\n        width && height && this.setSize(width, height),\n            _miniGl.lastDebugMsg,\n            (_miniGl.debug =\n                debug && debug_output\n                    ? function (e) {\n                        var t = new Date();\n                        t - _miniGl.lastDebugMsg > 1e3 && console.log('---'), console.log.apply(console, __spreadArray([t.toLocaleTimeString() + Array(Math.max(0, 32 - e.length)).join(' ') + e + ': '], Array.from(arguments).slice(1), false)),\n                            (_miniGl.lastDebugMsg = t);\n                    }\n                    : function () { }),\n            Object.defineProperties(_miniGl, {\n                Material: {\n                    enumerable: false,\n                    value: /** @class */ (function () {\n                        function value(vertexShaders, fragments, uniforms) {\n                            if (uniforms === void 0) { uniforms = {}; }\n                            var material = this;\n                            function getShaderByType(type, source) {\n                                var shader = context.createShader(type);\n                                return (context.shaderSource(shader, source),\n                                    context.compileShader(shader),\n                                    context.getShaderParameter(shader, context.COMPILE_STATUS) ||\n                                        console.error(context.getShaderInfoLog(shader)),\n                                    _miniGl.debug('Material.compileShaderSource', {\n                                        source: source,\n                                    }),\n                                    shader);\n                            }\n                            function getUniformVariableDeclarations(uniforms, type) {\n                                return Object.entries(uniforms)\n                                    .map(function (_a) {\n                                    var uniform = _a[0], value = _a[1];\n                                    return value.getDeclaration(uniform, type);\n                                })\n                                    .join('\\n');\n                            }\n                            (material.uniforms = uniforms), (material.uniformInstances = []);\n                            var prefix = '\\n              precision highp float;\\n            ';\n                            (material.vertexSource = \"\\n              \".concat(prefix, \"\\n              attribute vec4 position;\\n              attribute vec2 uv;\\n              attribute vec2 uvNorm;\\n              \").concat(getUniformVariableDeclarations(_miniGl.commonUniforms, 'vertex'), \"\\n              \").concat(getUniformVariableDeclarations(uniforms, 'vertex'), \"\\n              \").concat(vertexShaders, \"\\n            \")),\n                                (material.Source = \"\\n              \".concat(prefix, \"\\n              \").concat(getUniformVariableDeclarations(_miniGl.commonUniforms, 'fragment'), \"\\n              \").concat(getUniformVariableDeclarations(uniforms, 'fragment'), \"\\n              \").concat(fragments, \"\\n            \")),\n                                (material.vertexShader = getShaderByType(context.VERTEX_SHADER, material.vertexSource)),\n                                (material.fragmentShader = getShaderByType(context.FRAGMENT_SHADER, material.Source)),\n                                (material.program = context.createProgram()),\n                                context.attachShader(material.program, material.vertexShader),\n                                context.attachShader(material.program, material.fragmentShader),\n                                context.linkProgram(material.program),\n                                context.getProgramParameter(material.program, context.LINK_STATUS) ||\n                                    console.error(context.getProgramInfoLog(material.program)),\n                                context.useProgram(material.program),\n                                material.attachUniforms(void 0, _miniGl.commonUniforms),\n                                material.attachUniforms(void 0, material.uniforms);\n                        }\n                        //t = uniform\n                        value.prototype.attachUniforms = function (name, uniforms) {\n                            //n  = material\n                            var material = this;\n                            void 0 === name\n                                ? Object.entries(uniforms).forEach(function (_a) {\n                                    var name = _a[0], uniform = _a[1];\n                                    material.attachUniforms(name, uniform);\n                                })\n                                : 'array' == uniforms.type\n                                    ? uniforms.value.forEach(function (uniform, i) { return material.attachUniforms(\"\".concat(name, \"[\").concat(i, \"]\"), uniform); })\n                                    : 'struct' == uniforms.type\n                                        ? Object.entries(uniforms.value).forEach(function (_a) {\n                                            var uniform = _a[0], i = _a[1];\n                                            return material.attachUniforms(\"\".concat(name, \".\").concat(uniform), i);\n                                        })\n                                        : (_miniGl.debug('Material.attachUniforms', {\n                                            name: name,\n                                            uniform: uniforms,\n                                        }),\n                                            material.uniformInstances.push({\n                                                uniform: uniforms,\n                                                location: context.getUniformLocation(material.program, name),\n                                            }));\n                        };\n                        return value;\n                    }()),\n                },\n                Uniform: {\n                    enumerable: !1,\n                    value: /** @class */ (function () {\n                        function value(e) {\n                            (this.type = 'float'), Object.assign(this, e);\n                            (this.typeFn =\n                                {\n                                    float: '1f',\n                                    int: '1i',\n                                    vec2: '2fv',\n                                    vec3: '3fv',\n                                    vec4: '4fv',\n                                    mat4: 'Matrix4fv',\n                                }[this.type] || '1f'),\n                                this.update();\n                        }\n                        value.prototype.update = function (value) {\n                            void 0 !== this.value &&\n                                context[\"uniform\".concat(this.typeFn)](value, 0 === this.typeFn.indexOf('Matrix') ? this.transpose : this.value, 0 === this.typeFn.indexOf('Matrix') ? this.value : null);\n                        };\n                        //e - name\n                        //t - type\n                        //n - length\n                        value.prototype.getDeclaration = function (name, type, length) {\n                            var uniform = this;\n                            if (uniform.excludeFrom !== type) {\n                                if ('array' === uniform.type)\n                                    return (uniform.value[0].getDeclaration(name, type, uniform.value.length) +\n                                        \"\\nconst int \".concat(name, \"_length = \").concat(uniform.value.length, \";\"));\n                                if ('struct' === uniform.type) {\n                                    var name_no_prefix = name.replace('u_', '');\n                                    return ((name_no_prefix = name_no_prefix.charAt(0).toUpperCase() + name_no_prefix.slice(1)),\n                                        \"uniform struct \".concat(name_no_prefix, \" \\n                                  {\\n\") +\n                                            Object.entries(uniform.value)\n                                                .map(function (_a) {\n                                                var name = _a[0], uniform = _a[1];\n                                                return uniform.getDeclaration(name, type).replace(/^uniform/, '');\n                                            })\n                                                .join('') +\n                                            \"\\n} \".concat(name).concat(length > 0 ? \"[\".concat(length, \"]\") : '', \";\"));\n                                }\n                                return \"uniform \".concat(uniform.type, \" \").concat(name).concat(length > 0 ? \"[\".concat(length, \"]\") : '', \";\");\n                            }\n                        };\n                        return value;\n                    }()),\n                },\n                PlaneGeometry: {\n                    enumerable: !1,\n                    value: /** @class */ (function () {\n                        function value(width, height, n, i, orientation) {\n                            context.createBuffer(),\n                                (this.attributes = {\n                                    position: new _miniGl.Attribute({\n                                        target: context.ARRAY_BUFFER,\n                                        size: 3,\n                                    }),\n                                    uv: new _miniGl.Attribute({\n                                        target: context.ARRAY_BUFFER,\n                                        size: 2,\n                                    }),\n                                    uvNorm: new _miniGl.Attribute({\n                                        target: context.ARRAY_BUFFER,\n                                        size: 2,\n                                    }),\n                                    index: new _miniGl.Attribute({\n                                        target: context.ELEMENT_ARRAY_BUFFER,\n                                        size: 3,\n                                        type: context.UNSIGNED_SHORT,\n                                    }),\n                                }),\n                                this.setTopology(n, i),\n                                this.setSize(width, height, orientation);\n                        }\n                        value.prototype.setTopology = function (e, t) {\n                            if (e === void 0) { e = 1; }\n                            if (t === void 0) { t = 1; }\n                            var n = this;\n                            (n.xSegCount = e),\n                                (n.ySegCount = t),\n                                (n.vertexCount = (n.xSegCount + 1) * (n.ySegCount + 1)),\n                                (n.quadCount = n.xSegCount * n.ySegCount * 2),\n                                (n.attributes.uv.values = new Float32Array(2 * n.vertexCount)),\n                                (n.attributes.uvNorm.values = new Float32Array(2 * n.vertexCount)),\n                                (n.attributes.index.values = new Uint16Array(3 * n.quadCount));\n                            for (var e_1 = 0; e_1 <= n.ySegCount; e_1++)\n                                for (var t_1 = 0; t_1 <= n.xSegCount; t_1++) {\n                                    var i = e_1 * (n.xSegCount + 1) + t_1;\n                                    if (((n.attributes.uv.values[2 * i] = t_1 / n.xSegCount),\n                                        (n.attributes.uv.values[2 * i + 1] = 1 - e_1 / n.ySegCount),\n                                        (n.attributes.uvNorm.values[2 * i] = (t_1 / n.xSegCount) * 2 - 1),\n                                        (n.attributes.uvNorm.values[2 * i + 1] = 1 - (e_1 / n.ySegCount) * 2),\n                                        t_1 < n.xSegCount && e_1 < n.ySegCount)) {\n                                        var s = e_1 * n.xSegCount + t_1;\n                                        (n.attributes.index.values[6 * s] = i),\n                                            (n.attributes.index.values[6 * s + 1] = i + 1 + n.xSegCount),\n                                            (n.attributes.index.values[6 * s + 2] = i + 1),\n                                            (n.attributes.index.values[6 * s + 3] = i + 1),\n                                            (n.attributes.index.values[6 * s + 4] = i + 1 + n.xSegCount),\n                                            (n.attributes.index.values[6 * s + 5] = i + 2 + n.xSegCount);\n                                    }\n                                }\n                            n.attributes.uv.update(),\n                                n.attributes.uvNorm.update(),\n                                n.attributes.index.update(),\n                                _miniGl.debug('Geometry.setTopology', {\n                                    uv: n.attributes.uv,\n                                    uvNorm: n.attributes.uvNorm,\n                                    index: n.attributes.index,\n                                });\n                        };\n                        value.prototype.setSize = function (width, height, orientation) {\n                            if (width === void 0) { width = 1; }\n                            if (height === void 0) { height = 1; }\n                            if (orientation === void 0) { orientation = 'xz'; }\n                            var geometry = this;\n                            (geometry.width = width),\n                                (geometry.height = height),\n                                (geometry.orientation = orientation),\n                                (geometry.attributes.position.values &&\n                                    geometry.attributes.position.values.length === 3 * geometry.vertexCount) ||\n                                    (geometry.attributes.position.values = new Float32Array(3 * geometry.vertexCount));\n                            var o = width / -2, r = height / -2, segment_width = width / geometry.xSegCount, segment_height = height / geometry.ySegCount;\n                            for (var yIndex = 0; yIndex <= geometry.ySegCount; yIndex++) {\n                                var t = r + yIndex * segment_height;\n                                for (var xIndex = 0; xIndex <= geometry.xSegCount; xIndex++) {\n                                    var r_1 = o + xIndex * segment_width, l = yIndex * (geometry.xSegCount + 1) + xIndex;\n                                    (geometry.attributes.position.values[3 * l + 'xyz'.indexOf(orientation[0])] = r_1),\n                                        (geometry.attributes.position.values[3 * l + 'xyz'.indexOf(orientation[1])] = -t);\n                                }\n                            }\n                            geometry.attributes.position.update(),\n                                _miniGl.debug('Geometry.setSize', {\n                                    position: geometry.attributes.position,\n                                });\n                        };\n                        return value;\n                    }()),\n                },\n                Mesh: {\n                    enumerable: !1,\n                    value: /** @class */ (function () {\n                        function value(geometry, material) {\n                            var mesh = this;\n                            (mesh.geometry = geometry),\n                                (mesh.material = material),\n                                (mesh.wireframe = !1),\n                                (mesh.attributeInstances = []),\n                                Object.entries(mesh.geometry.attributes).forEach(function (_a) {\n                                    var e = _a[0], attribute = _a[1];\n                                    mesh.attributeInstances.push({\n                                        attribute: attribute,\n                                        location: attribute.attach(e, mesh.material.program),\n                                    });\n                                }),\n                                _miniGl.meshes.push(mesh),\n                                _miniGl.debug('Mesh.constructor', {\n                                    mesh: mesh,\n                                });\n                        }\n                        value.prototype.draw = function () {\n                            context.useProgram(this.material.program),\n                                this.material.uniformInstances.forEach(function (_a) {\n                                    var e = _a.uniform, t = _a.location;\n                                    return e.update(t);\n                                }),\n                                this.attributeInstances.forEach(function (_a) {\n                                    var e = _a.attribute, t = _a.location;\n                                    return e.use(t);\n                                }),\n                                context.drawElements(this.wireframe ? context.LINES : context.TRIANGLES, this.geometry.attributes.index.values.length, context.UNSIGNED_SHORT, 0);\n                        };\n                        value.prototype.remove = function () {\n                            var _this = this;\n                            _miniGl.meshes = _miniGl.meshes.filter(function (e) { return e != _this; });\n                        };\n                        return value;\n                    }()),\n                },\n                Attribute: {\n                    enumerable: !1,\n                    value: /** @class */ (function () {\n                        function value(e) {\n                            (this.type = context.FLOAT),\n                                (this.normalized = !1),\n                                (this.buffer = context.createBuffer()),\n                                Object.assign(this, e),\n                                this.update();\n                        }\n                        value.prototype.update = function () {\n                            void 0 !== this.values &&\n                                (context.bindBuffer(this.target, this.buffer),\n                                    context.bufferData(this.target, this.values, context.STATIC_DRAW));\n                        };\n                        value.prototype.attach = function (e, t) {\n                            var n = context.getAttribLocation(t, e);\n                            return (this.target === context.ARRAY_BUFFER &&\n                                (context.enableVertexAttribArray(n),\n                                    context.vertexAttribPointer(n, this.size, this.type, this.normalized, 0, 0)),\n                                n);\n                        };\n                        value.prototype.use = function (e) {\n                            context.bindBuffer(this.target, this.buffer),\n                                this.target === context.ARRAY_BUFFER &&\n                                    (context.enableVertexAttribArray(e),\n                                        context.vertexAttribPointer(e, this.size, this.type, this.normalized, 0, 0));\n                        };\n                        return value;\n                    }()),\n                },\n            });\n        var a = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n        _miniGl.commonUniforms = {\n            projectionMatrix: new _miniGl.Uniform({\n                type: 'mat4',\n                value: a,\n            }),\n            modelViewMatrix: new _miniGl.Uniform({\n                type: 'mat4',\n                value: a,\n            }),\n            resolution: new _miniGl.Uniform({\n                type: 'vec2',\n                value: [1, 1],\n            }),\n            aspectRatio: new _miniGl.Uniform({\n                type: 'float',\n                value: 1,\n            }),\n        };\n    }\n    MiniGl.prototype.setSize = function (e, t, e1, t1) {\n        if (e === void 0) { e = 640; }\n        if (t === void 0) { t = 480; }\n        if (e1 === void 0) { e1 = 640; }\n        if (t1 === void 0) { t1 = 480; }\n        (this.width = e),\n            (this.height = t),\n            (this.canvas.width = e1),\n            (this.canvas.height = t1),\n            this.gl.viewport(0, 0, e1, t1),\n            (this.commonUniforms.resolution.value = [e1, t1]),\n            (this.commonUniforms.aspectRatio.value = e1 / t1),\n            this.debug('MiniGL.setSize', {\n                width: e,\n                height: t,\n            });\n    };\n    //left, right, top, bottom, near, far\n    MiniGl.prototype.setOrthographicCamera = function (e, t, n, i, s) {\n        if (e === void 0) { e = 0; }\n        if (t === void 0) { t = 0; }\n        if (n === void 0) { n = 0; }\n        if (i === void 0) { i = -2e3; }\n        if (s === void 0) { s = 2e3; }\n        (this.commonUniforms.projectionMatrix.value = [\n            2 / this.width,\n            0,\n            0,\n            0,\n            0,\n            2 / this.height,\n            0,\n            0,\n            0,\n            0,\n            2 / (i - s),\n            0,\n            e,\n            t,\n            n,\n            1,\n        ]),\n            this.debug('setOrthographicCamera', this.commonUniforms.projectionMatrix.value);\n    };\n    MiniGl.prototype.render = function () {\n        this.gl.clearColor(0, 0, 0, 0), this.gl.clearDepth(1), this.meshes.forEach(function (e) { return e.draw(); });\n    };\n    return MiniGl;\n}());\nexports.MiniGl = MiniGl;\n", "\"use strict\";\n/*\n *   Stripe WebGl Gradient Animation\n *   All Credits to Stripe.com\n *   ScrollObserver functionality to disable animation when not scrolled into view has been disabled and\n *   commented out for now.\n *   https://kevinhufnagl.com\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Gradient = void 0;\n/*\n * Modified by Anup Aglawe - (aglawe.anup22@gmail.com)\n */\n//Sets initial properties\nvar webgl_1 = require(\"./webgl\");\nfunction e(object, propertyName, val) {\n    return (propertyName in object\n        ? Object.defineProperty(object, propertyName, {\n            value: val,\n            enumerable: !0,\n            configurable: !0,\n            writable: !0,\n        })\n        : (object[propertyName] = val),\n        object);\n}\n//Gradient object\nvar Gradient = /** @class */ (function () {\n    function Gradient() {\n        var t = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            t[_i] = arguments[_i];\n        }\n        var _this = this;\n        e(this, 'el', void 0),\n            e(this, 'cssVarRetries', 0),\n            e(this, 'maxCssVarRetries', 200),\n            e(this, 'angle', 0),\n            e(this, 'inputColors', []),\n            e(this, 'isLoadedClass', !1),\n            e(this, 'scrollingTimeout', void 0),\n            e(this, 'isIntersecting', !1),\n            e(this, 'shaderFiles', void 0),\n            e(this, 'vertexShader', void 0),\n            e(this, 'sectionColors', void 0),\n            e(this, 'computedCanvasStyle', void 0),\n            e(this, 'conf', void 0),\n            e(this, 'uniforms', void 0),\n            e(this, 't', 1253106),\n            e(this, 'last', 0),\n            e(this, 'width', void 0),\n            e(this, 'minWidth', 1111),\n            e(this, 'height', 600),\n            e(this, 'xSegCount', void 0),\n            e(this, 'ySegCount', void 0),\n            e(this, 'mesh', void 0),\n            e(this, 'material', void 0),\n            e(this, 'geometry', void 0),\n            e(this, 'minigl', void 0),\n            e(this, 'amp', 320),\n            e(this, 'seed', 4),\n            e(this, 'freqX', 14e-5),\n            e(this, 'freqY', 29e-5),\n            e(this, 'freqDelta', 1e-5),\n            e(this, 'activeColors', [1, 1, 1, 1]),\n            e(this, 'isMetaKey', !1),\n            e(this, 'isGradientLegendVisible', !1),\n            e(this, 'resize', function () {\n                // (this.width = window.innerWidth),\n                //   this.minigl.setSize(this.width, this.height),\n                //   this.minigl.setOrthographicCamera(),\n                //   (this.xSegCount = Math.ceil(this.width * this.conf.density[0])),\n                //   (this.ySegCount = Math.ceil(this.height * this.conf.density[1])),\n                //   this.mesh.geometry.setTopology(this.xSegCount, this.ySegCount),\n                //   this.mesh.geometry.setSize(this.width, this.height),\n                //   (this.mesh.material.uniforms.u_shadow_power.value =\n                //     this.width < 600 ? 5 : 6);\n            }),\n            e(this, 'addIsLoadedClass', function () {\n                /*this.isIntersecting && */ !_this.isLoadedClass &&\n                    ((_this.isLoadedClass = !0),\n                        _this.el.classList.add('isLoaded'),\n                        setTimeout(function () {\n                            _this.el.parentElement.classList.add('isLoaded');\n                        }, 3e3));\n            }),\n            e(this, 'initGradient', function (selector, colors) {\n                _this.el = document.querySelector(selector);\n                _this.inputColors = colors;\n                _this.connect();\n                return _this;\n            });\n    }\n    Gradient.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                (this.shaderFiles = {\n                    vertex: 'varying vec3 v_color;\\n\\nvoid main() {\\n  float time = u_time * u_global.noiseSpeed;\\n\\n  vec2 noiseCoord = resolution * uvNorm * u_global.noiseFreq;\\n\\n  vec2 st = 1. - uvNorm.xy;\\n\\n  //\\n  // Tilting the plane\\n  //\\n\\n  // Front-to-back tilt\\n  float tilt = resolution.y / 2.0 * uvNorm.y;\\n\\n  // Left-to-right angle\\n  float incline = resolution.x * uvNorm.x / 2.0 * u_vertDeform.incline;\\n\\n  // Up-down shift to offset incline\\n  float offset = resolution.x / 2.0 * u_vertDeform.incline * mix(u_vertDeform.offsetBottom, u_vertDeform.offsetTop, uv.y);\\n\\n  //\\n  // Vertex noise\\n  //\\n\\n  float noise = snoise(vec3(\\n    noiseCoord.x * u_vertDeform.noiseFreq.x + time * u_vertDeform.noiseFlow,\\n    noiseCoord.y * u_vertDeform.noiseFreq.y,\\n    time * u_vertDeform.noiseSpeed + u_vertDeform.noiseSeed\\n  )) * u_vertDeform.noiseAmp;\\n\\n  // Fade noise to zero at edges\\n  noise *= 1.0 - pow(abs(uvNorm.y), 2.0);\\n\\n  // Clamp to 0\\n  noise = max(0.0, noise);\\n\\n  vec3 pos = vec3(\\n    position.x,\\n    position.y + tilt + incline + noise - offset,\\n    position.z\\n  );\\n\\n  //\\n  // Vertex color, to be passed to fragment shader\\n  //\\n\\n  if (u_active_colors[0] == 1.) {\\n    v_color = u_baseColor;\\n  }\\n\\n  for (int i = 0; i < u_waveLayers_length; i++) {\\n    if (u_active_colors[i + 1] == 1.) {\\n      WaveLayers layer = u_waveLayers[i];\\n\\n      float noise = smoothstep(\\n        layer.noiseFloor,\\n        layer.noiseCeil,\\n        snoise(vec3(\\n          noiseCoord.x * layer.noiseFreq.x + time * layer.noiseFlow,\\n          noiseCoord.y * layer.noiseFreq.y,\\n          time * layer.noiseSpeed + layer.noiseSeed\\n        )) / 2.0 + 0.5\\n      );\\n\\n      v_color = blendNormal(v_color, layer.color, pow(noise, 4.));\\n    }\\n  }\\n\\n  //\\n  // Finish\\n  //\\n\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\\n}',\n                    noise: '//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : stegu\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//               https://github.com/stegu/webgl-noise\\n//\\n\\nvec3 mod289(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute(vec4 x) {\\n    return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat snoise(vec3 v)\\n{\\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n// First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n// Other corners\\n  vec3 g = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g;\\n  vec3 i1 = min( g.xyz, l.zxy );\\n  vec3 i2 = max( g.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n// Permutations\\n  i = mod289(i);\\n  vec4 p = permute( permute( permute(\\n            i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n          + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\\n          + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D.wyz - D.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1.xy,h.z);\\n  vec3 p3 = vec3(a1.zw,h.w);\\n\\n//Normalise gradients\\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n// Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\\n                                dot(p2,x2), dot(p3,x3) ) );\\n}',\n                    blend: '//\\n// https://github.com/jamieowen/glsl-blend\\n//\\n\\n// Normal\\n\\nvec3 blendNormal(vec3 base, vec3 blend) {\\n\\treturn blend;\\n}\\n\\nvec3 blendNormal(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendNormal(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Screen\\n\\nfloat blendScreen(float base, float blend) {\\n\\treturn 1.0-((1.0-base)*(1.0-blend));\\n}\\n\\nvec3 blendScreen(vec3 base, vec3 blend) {\\n\\treturn vec3(blendScreen(base.r,blend.r),blendScreen(base.g,blend.g),blendScreen(base.b,blend.b));\\n}\\n\\nvec3 blendScreen(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendScreen(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Multiply\\n\\nvec3 blendMultiply(vec3 base, vec3 blend) {\\n\\treturn base*blend;\\n}\\n\\nvec3 blendMultiply(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendMultiply(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Overlay\\n\\nfloat blendOverlay(float base, float blend) {\\n\\treturn base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));\\n}\\n\\nvec3 blendOverlay(vec3 base, vec3 blend) {\\n\\treturn vec3(blendOverlay(base.r,blend.r),blendOverlay(base.g,blend.g),blendOverlay(base.b,blend.b));\\n}\\n\\nvec3 blendOverlay(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendOverlay(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Hard light\\n\\nvec3 blendHardLight(vec3 base, vec3 blend) {\\n\\treturn blendOverlay(blend,base);\\n}\\n\\nvec3 blendHardLight(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendHardLight(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Soft light\\n\\nfloat blendSoftLight(float base, float blend) {\\n\\treturn (blend<0.5)?(2.0*base*blend+base*base*(1.0-2.0*blend)):(sqrt(base)*(2.0*blend-1.0)+2.0*base*(1.0-blend));\\n}\\n\\nvec3 blendSoftLight(vec3 base, vec3 blend) {\\n\\treturn vec3(blendSoftLight(base.r,blend.r),blendSoftLight(base.g,blend.g),blendSoftLight(base.b,blend.b));\\n}\\n\\nvec3 blendSoftLight(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendSoftLight(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Color dodge\\n\\nfloat blendColorDodge(float base, float blend) {\\n\\treturn (blend==1.0)?blend:min(base/(1.0-blend),1.0);\\n}\\n\\nvec3 blendColorDodge(vec3 base, vec3 blend) {\\n\\treturn vec3(blendColorDodge(base.r,blend.r),blendColorDodge(base.g,blend.g),blendColorDodge(base.b,blend.b));\\n}\\n\\nvec3 blendColorDodge(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendColorDodge(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Color burn\\n\\nfloat blendColorBurn(float base, float blend) {\\n\\treturn (blend==0.0)?blend:max((1.0-((1.0-base)/blend)),0.0);\\n}\\n\\nvec3 blendColorBurn(vec3 base, vec3 blend) {\\n\\treturn vec3(blendColorBurn(base.r,blend.r),blendColorBurn(base.g,blend.g),blendColorBurn(base.b,blend.b));\\n}\\n\\nvec3 blendColorBurn(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendColorBurn(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Vivid Light\\n\\nfloat blendVividLight(float base, float blend) {\\n\\treturn (blend<0.5)?blendColorBurn(base,(2.0*blend)):blendColorDodge(base,(2.0*(blend-0.5)));\\n}\\n\\nvec3 blendVividLight(vec3 base, vec3 blend) {\\n\\treturn vec3(blendVividLight(base.r,blend.r),blendVividLight(base.g,blend.g),blendVividLight(base.b,blend.b));\\n}\\n\\nvec3 blendVividLight(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendVividLight(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Lighten\\n\\nfloat blendLighten(float base, float blend) {\\n\\treturn max(blend,base);\\n}\\n\\nvec3 blendLighten(vec3 base, vec3 blend) {\\n\\treturn vec3(blendLighten(base.r,blend.r),blendLighten(base.g,blend.g),blendLighten(base.b,blend.b));\\n}\\n\\nvec3 blendLighten(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendLighten(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Linear burn\\n\\nfloat blendLinearBurn(float base, float blend) {\\n\\t// Note : Same implementation as BlendSubtractf\\n\\treturn max(base+blend-1.0,0.0);\\n}\\n\\nvec3 blendLinearBurn(vec3 base, vec3 blend) {\\n\\t// Note : Same implementation as BlendSubtract\\n\\treturn max(base+blend-vec3(1.0),vec3(0.0));\\n}\\n\\nvec3 blendLinearBurn(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendLinearBurn(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Linear dodge\\n\\nfloat blendLinearDodge(float base, float blend) {\\n\\t// Note : Same implementation as BlendAddf\\n\\treturn min(base+blend,1.0);\\n}\\n\\nvec3 blendLinearDodge(vec3 base, vec3 blend) {\\n\\t// Note : Same implementation as BlendAdd\\n\\treturn min(base+blend,vec3(1.0));\\n}\\n\\nvec3 blendLinearDodge(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendLinearDodge(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Linear light\\n\\nfloat blendLinearLight(float base, float blend) {\\n\\treturn blend<0.5?blendLinearBurn(base,(2.0*blend)):blendLinearDodge(base,(2.0*(blend-0.5)));\\n}\\n\\nvec3 blendLinearLight(vec3 base, vec3 blend) {\\n\\treturn vec3(blendLinearLight(base.r,blend.r),blendLinearLight(base.g,blend.g),blendLinearLight(base.b,blend.b));\\n}\\n\\nvec3 blendLinearLight(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendLinearLight(base, blend) * opacity + base * (1.0 - opacity));\\n}',\n                    fragment: 'varying vec3 v_color;\\n\\nvoid main() {\\n  vec3 color = v_color;\\n  if (u_darken_top == 1.0) {\\n    vec2 st = gl_FragCoord.xy/resolution.xy;\\n    color.g -= pow(st.y + sin(-12.0) * st.x, u_shadow_power) * 0.4;\\n  }\\n  gl_FragColor = vec4(color, 1.0);\\n}',\n                }),\n                    (this.conf = {\n                        presetName: '',\n                        wireframe: false,\n                        density: [0.06, 0.16],\n                        zoom: 1,\n                        rotation: 0,\n                        playing: true,\n                    }),\n                    document.querySelectorAll('canvas').length < 1\n                        ? console.warn('DID NOT LOAD HERO STRIPE CANVAS')\n                        : ((this.minigl = new webgl_1.MiniGl(this.el, null, null, !0)), this.el && this.init());\n                return [2 /*return*/];\n            });\n        });\n    };\n    Gradient.prototype.disconnect = function () {\n        this.scrollObserver &&\n            (window.removeEventListener('scroll', this.handleScroll),\n                window.removeEventListener('mousedown', this.handleMouseDown),\n                window.removeEventListener('mouseup', this.handleMouseUp),\n                window.removeEventListener('keydown', this.handleKeyDown),\n                this.scrollObserver.disconnect()),\n            window.removeEventListener('resize', this.resize);\n    };\n    Gradient.prototype.setCanvasSize = function (width, height, initial) {\n        if (initial === void 0) { initial = true; }\n        (this.width = width),\n            (this.height = height),\n            this.minigl.setSize(Math.min(1024, this.width), Math.min(this.height, 600), this.width, this.height),\n            this.minigl.setOrthographicCamera(),\n            initial && (this.xSegCount = Math.ceil(this.width * this.conf.density[0])),\n            initial && (this.ySegCount = Math.ceil(this.height * this.conf.density[1])),\n            initial && this.mesh.geometry.setTopology(this.xSegCount, this.ySegCount),\n            this.mesh.geometry.setSize(this.width, this.height),\n            (this.mesh.material.uniforms.u_shadow_power.value = this.width < 600 ? 5 : 6);\n    };\n    Gradient.prototype.initMaterial = function () {\n        this.uniforms = {\n            u_time: new this.minigl.Uniform({\n                value: 0,\n            }),\n            u_shadow_power: new this.minigl.Uniform({\n                value: 5,\n            }),\n            u_darken_top: new this.minigl.Uniform({\n                value: '' === this.el.dataset.jsDarkenTop ? 1 : 0,\n            }),\n            u_active_colors: new this.minigl.Uniform({\n                value: this.activeColors,\n                type: 'vec4',\n            }),\n            u_global: new this.minigl.Uniform({\n                value: {\n                    noiseFreq: new this.minigl.Uniform({\n                        value: [this.freqX, this.freqY],\n                        type: 'vec2',\n                    }),\n                    noiseSpeed: new this.minigl.Uniform({\n                        value: 5e-6,\n                    }),\n                },\n                type: 'struct',\n            }),\n            u_vertDeform: new this.minigl.Uniform({\n                value: {\n                    incline: new this.minigl.Uniform({\n                        value: Math.sin(this.angle) / Math.cos(this.angle),\n                    }),\n                    offsetTop: new this.minigl.Uniform({\n                        value: -0.5,\n                    }),\n                    offsetBottom: new this.minigl.Uniform({\n                        value: -0.5,\n                    }),\n                    noiseFreq: new this.minigl.Uniform({\n                        value: [3, 4],\n                        type: 'vec2',\n                    }),\n                    noiseAmp: new this.minigl.Uniform({\n                        value: this.amp,\n                    }),\n                    noiseSpeed: new this.minigl.Uniform({\n                        value: 10,\n                    }),\n                    noiseFlow: new this.minigl.Uniform({\n                        value: 3,\n                    }),\n                    noiseSeed: new this.minigl.Uniform({\n                        value: this.seed,\n                    }),\n                },\n                type: 'struct',\n                excludeFrom: 'fragment',\n            }),\n            u_baseColor: new this.minigl.Uniform({\n                value: this.sectionColors[0],\n                type: 'vec3',\n                excludeFrom: 'fragment',\n            }),\n            u_waveLayers: new this.minigl.Uniform({\n                value: [],\n                excludeFrom: 'fragment',\n                type: 'array',\n            }),\n        };\n        for (var e_1 = 1; e_1 < this.sectionColors.length; e_1 += 1)\n            this.uniforms.u_waveLayers.value.push(new this.minigl.Uniform({\n                value: {\n                    color: new this.minigl.Uniform({\n                        value: this.sectionColors[e_1],\n                        type: 'vec3',\n                    }),\n                    noiseFreq: new this.minigl.Uniform({\n                        value: [2 + e_1 / this.sectionColors.length, 3 + e_1 / this.sectionColors.length],\n                        type: 'vec2',\n                    }),\n                    noiseSpeed: new this.minigl.Uniform({\n                        value: 11 + 0.3 * e_1,\n                    }),\n                    noiseFlow: new this.minigl.Uniform({\n                        value: 6.5 + 0.3 * e_1,\n                    }),\n                    noiseSeed: new this.minigl.Uniform({\n                        value: this.seed + 10 * e_1,\n                    }),\n                    noiseFloor: new this.minigl.Uniform({\n                        value: 0.1,\n                    }),\n                    noiseCeil: new this.minigl.Uniform({\n                        value: 0.63 + 0.07 * e_1,\n                    }),\n                },\n                type: 'struct',\n            }));\n        return ((this.vertexShader = [this.shaderFiles.noise, this.shaderFiles.blend, this.shaderFiles.vertex].join('\\n\\n')),\n            new this.minigl.Material(this.vertexShader, this.shaderFiles.fragment, this.uniforms));\n    };\n    Gradient.prototype.initMesh = function () {\n        (this.material = this.initMaterial()),\n            (this.geometry = new this.minigl.PlaneGeometry()),\n            (this.mesh = new this.minigl.Mesh(this.geometry, this.material));\n    };\n    Gradient.prototype.shouldSkipFrame = function (e) {\n        return !!window.document.hidden || !this.conf.playing || parseInt(e, 10) % 2 == 0 || void 0;\n    };\n    Gradient.prototype.updateFrequency = function (e) {\n        (this.freqX += e), (this.freqY += e);\n    };\n    Gradient.prototype.toggleColor = function (index) {\n        this.activeColors[index] = 0 === this.activeColors[index] ? 1 : 0;\n    };\n    Gradient.prototype.showGradientLegend = function () {\n        this.width > this.minWidth &&\n            ((this.isGradientLegendVisible = !0), document.body.classList.add('isGradientLegendVisible'));\n    };\n    Gradient.prototype.hideGradientLegend = function () {\n        (this.isGradientLegendVisible = !1), document.body.classList.remove('isGradientLegendVisible');\n    };\n    Gradient.prototype.changePosition = function (val) {\n        var newValue = val;\n        this.t = 1253106 + newValue * 1000;\n        this.mesh.material.uniforms.u_time.value = this.t;\n        this.minigl.render();\n        // requestAnimationFrame(this.animate);\n    };\n    Gradient.prototype.init = function () {\n        this.initGradientColors(), this.initMesh(), this.setCanvasSize(1024, 600), this.minigl.render();\n        window.addEventListener('resize', this.resize);\n    };\n    /*\n     * Waiting for the css variables to become available, usually on page load before we can continue.\n     * Using default colors assigned below if no variables have been found after maxCssVarRetries\n     */\n    /*\n     * Initializes the four section colors by retrieving them from css variables.\n     */\n    Gradient.prototype.initGradientColors = function () {\n        this.sectionColors = this.inputColors\n            .map(function (hexColor) {\n            var hex = hexColor;\n            //Check if shorthand hex value was used and double the length so the conversion in normalizeColor will work.\n            if (4 === hex.length) {\n                var hexTemp = hex\n                    .substr(1)\n                    .split('')\n                    .map(function (hexTemp) { return hexTemp + hexTemp; })\n                    .join('');\n                hex = \"#\".concat(hexTemp);\n            }\n            return hex && \"0x\".concat(hex.slice(1));\n        })\n            .filter(Boolean)\n            .map(webgl_1.normalizeColor);\n    };\n    Gradient.prototype.changeGradientColors = function (colors) {\n        if (colors) {\n            this.inputColors = colors;\n            this.init();\n        }\n    };\n    Gradient.prototype.reGenerateCanvas = function () {\n        this.minigl.render();\n    };\n    Gradient.prototype.getGradientColors = function () {\n        return this.inputColors;\n    };\n    return Gradient;\n}());\nexports.Gradient = Gradient;\n/*\n *Finally initializing the Gradient class, assigning a canvas to it and calling Gradient.connect() which initializes everything,\n * Use Gradient.pause() and Gradient.play() for controls.\n *\n * Here are some default property values you can change anytime:\n * Amplitude:    Gradient.amp = 0\n * Colors:       Gradient.sectionColors (if you change colors, use normalizeColor(#hexValue)) before you assign it.\n *\n *\n * Useful functions\n * Gradient.toggleColor(index)\n * Gradient.updateFrequency(freq)\n */\n// export { Gradient };\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MeshGradient = require('./core/stripe.gradient').Gradient;\nexports.default = MeshGradient;\n"],
  "mappings": "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",
  "names": ["MiniGl", "uniforms", "value", "name", "uniform", "width", "height", "e", "Gradient", "hexTemp"]
}
